@import "../utils/functions/map-get";
@import "../utils/functions/misc-functions";
@import "../utils/mixins/typography";
@import "../utils/mixins/media";

@import "./color.palette";

$app-min-width: 320px;

// --- #COLORS--- //

// Color maps
$grays: ();
$colors: ();
$theme-colors: ();

$grays: map-merge(
  (
    "200": $gray-200,
    "400": $gray-400,
    "600": $gray-600,
    "800": $gray-800,
  ),
  $grays
);

$colors: map-merge(
  (
    "pacific-blue": $pacific-blue,
    "green": $green,
    "red": $red,
    "yellow": $yellow,
  ),
  $colors
);

$theme-colors: map-merge(
  (
    "primary": $primary,
    "secondary": $secondary,
    "success": $success,
    "info": $info,
    "warning": $warning,
    "danger": $danger,
  ),
  $theme-colors
);

// Background colors
$bg-base: $aqua-haze;
$bg-secondary: $black;

// Background color for `<body>`
$body-bg: $bg-base;

// Background color for `<_header>`
$header-bg: rgba(gray("600"), 0.2);

// Background color for `<_footer>`
$footer-bg: rgba(gray("600"), 0.6);

// Background color for `<aside>`
$sidebar-bg: $bg-base;

// --- #TYPOGRAPHY--- //

$font-family-base: "Lato", Arial, sans-serif;
$color-base: $big-stone;
$color-secondary: gray("600");

// Paragraph sizes
$font-size-lg: 18px;
$font-size-md: 14px;
$font-size-sm: 12px;

$font-size-base: 16px;

$font-sizes: ();

$font-sizes: map-merge(
  (
    "large": $font-size-lg,
    "medium": $font-size-md,
    "small": $font-size-sm,
  ),
  $font-sizes
);

// Check if paragraph sizes are in the right order
@include assert-decreasing($font-sizes, "$font-sizes");

$line-height-base: 1.7;

// Font weights
$thin: 100;
$extra-light: 200;
$light: 300;
$normal: 400;
$medium: 500;
$semi-bold: 600;
$bold: 700;
$extra-bold: 800;
$heavy: 900;

$font-weights: ();

$font-weights: map-merge(
  (
    "Thin": $thin,
    "Extra Light": $extra-light,
    "Light": $light,
    "Regular": $normal,
    "Medium": $medium,
    "Semi Bold": $semi-bold,
    "Bold": $bold,
    "Extra Bold": $extra-bold,
    "Black": $heavy,
  ),
  $font-weights
);

// Check if weight values are in the right order
@include assert-ascending($font-weights, "$font-weights");

// Titles
$title-color-base: $color-base;

$h1-size: 42px;
$h2-size: 36px;
$h3-size: 24px;
$h4-size: 21px;
$h5-size: 18px;
$h6-size: 16px;

$title-sizes: ();

$title-sizes: map-merge(
  (
    "h1": $h1-size,
    "h2": $h2-size,
    "h3": $h3-size,
    "h4": $h4-size,
    "h5": $h5-size,
    "h6": $h6-size,
  ),
  $title-sizes
);

// Check if title sizes are in the right order
@include assert-decreasing($title-sizes, "$title-sizes");

// Link
$link-color: $pacific-blue;
$link-hover-color: rgba($pacific-blue, 0.65);
$link-active-color: rgba($pacific-blue, 0.5);

// --- #VIEW MODEL PROPERTIES--- //

// Borders
$border-color-base: $cod-gray;
$border-width-base: 1px;
$border-style-base: solid;

$border-base: $border-width-base $border-style-base $border-color-base;

$border-radius-base: 4px;
$border-radius-sm: 2px;

// Shadow
$shadow-color: rgba($black, 0.15);
$box-shadow-base: 0 1px 3px $shadow-color;

// Breakpoints
$breakpoints: (
  "app-min-width": $app-min-width,
  "phone": 576px,
  "tablet-small": 768px,
  "tablet": 992px,
  "laptop": 1200px,
  "desktop": 1366px,
);

// Check if breakpoint widths are in the right order
@include assert-ascending($breakpoints, "$breakpoints");

// Check if the first size of breakpoint map has a right value
@include assert-starts-at-app-min-width($breakpoints);

// Width sizes of container
$container-widths: (
  "phone": 540px,
  "tablet-small": 720px,
  "tablet": 960px,
  "laptop": 1170px,
  "desktop": 1278px,
);

// Check if container widths are in the right order
@include assert-ascending($container-widths, "$container-widths");
